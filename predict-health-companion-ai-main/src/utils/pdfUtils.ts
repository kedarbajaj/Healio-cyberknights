
import { jsPDF } from "jspdf";
import { DietPlan } from "@/types";

export const generateDietPlanPDF = (dietPlan: DietPlan | null): void => {
  if (!dietPlan) {
    console.error("No diet plan available to download");
    return;
  }

  const doc = new jsPDF();
  
  // Set title
  doc.setFontSize(22);
  doc.setTextColor(41, 82, 155);
  doc.text(`${dietPlan.type} Diet Plan`, 20, 20);
  
  // Add subtitle
  doc.setFontSize(14);
  doc.setTextColor(100, 100, 100);
  doc.text("Personalized Health Recommendations", 20, 30);
  
  let yPosition = 40;
  
  // Add recommendations
  doc.setFontSize(16);
  doc.setTextColor(41, 82, 155);
  doc.text("Dietary Recommendations", 20, yPosition);
  yPosition += 8;
  
  doc.setFontSize(12);
  doc.setTextColor(80, 80, 80);
  dietPlan.recommendations.forEach((rec) => {
    doc.text(`• ${rec}`, 25, yPosition);
    yPosition += 7;
  });
  
  yPosition += 5;
  
  // Add restrictions if any
  if (dietPlan.restrictions.length > 0) {
    doc.setFontSize(16);
    doc.setTextColor(41, 82, 155);
    doc.text("Dietary Restrictions", 20, yPosition);
    yPosition += 8;
    
    doc.setFontSize(12);
    doc.setTextColor(80, 80, 80);
    dietPlan.restrictions.forEach((restriction) => {
      doc.text(`• ${restriction}`, 25, yPosition);
      yPosition += 7;
    });
    
    yPosition += 5;
  }
  
  // Add meal plans
  doc.setFontSize(16);
  doc.setTextColor(41, 82, 155);
  doc.text("Meal Plan", 20, yPosition);
  yPosition += 10;
  
  // Breakfast
  doc.setFontSize(14);
  doc.setTextColor(46, 125, 50);
  doc.text("Breakfast Options", 20, yPosition);
  yPosition += 7;
  
  doc.setFontSize(12);
  doc.setTextColor(80, 80, 80);
  dietPlan.meals.breakfast.forEach((item) => {
    doc.text(`• ${item}`, 25, yPosition);
    yPosition += 6;
  });
  yPosition += 5;
  
  // Check if need to add a new page
  if (yPosition > 250) {
    doc.addPage();
    yPosition = 20;
  }
  
  // Lunch
  doc.setFontSize(14);
  doc.setTextColor(25, 118, 210);
  doc.text("Lunch Options", 20, yPosition);
  yPosition += 7;
  
  doc.setFontSize(12);
  doc.setTextColor(80, 80, 80);
  dietPlan.meals.lunch.forEach((item) => {
    doc.text(`• ${item}`, 25, yPosition);
    yPosition += 6;
  });
  yPosition += 5;
  
  // Check if need to add a new page
  if (yPosition > 250) {
    doc.addPage();
    yPosition = 20;
  }
  
  // Dinner
  doc.setFontSize(14);
  doc.setTextColor(123, 31, 162);
  doc.text("Dinner Options", 20, yPosition);
  yPosition += 7;
  
  doc.setFontSize(12);
  doc.setTextColor(80, 80, 80);
  dietPlan.meals.dinner.forEach((item) => {
    doc.text(`• ${item}`, 25, yPosition);
    yPosition += 6;
  });
  yPosition += 5;
  
  // Check if need to add a new page
  if (yPosition > 250) {
    doc.addPage();
    yPosition = 20;
  }
  
  // Snacks
  doc.setFontSize(14);
  doc.setTextColor(230, 81, 0);
  doc.text("Healthy Snacks", 20, yPosition);
  yPosition += 7;
  
  doc.setFontSize(12);
  doc.setTextColor(80, 80, 80);
  dietPlan.meals.snacks.forEach((item) => {
    doc.text(`• ${item}`, 25, yPosition);
    yPosition += 6;
  });
  
  // Footer
  const pageCount = doc.getNumberOfPages();
  for (let i = 1; i <= pageCount; i++) {
    doc.setPage(i);
    doc.setFontSize(10);
    doc.setTextColor(150, 150, 150);
    doc.text(`Generated by Healio Health AI - Page ${i} of ${pageCount}`, 20, 290);
  }
  
  // Save the PDF
  doc.save("healio-diet-plan.pdf");
};
